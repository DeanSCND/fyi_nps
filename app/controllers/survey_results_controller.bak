class SurveyResultsController < ApplicationController
  before_action :set_survey_result, only: [:show, :edit, :update, :destroy]
  require 'csv'

  # GET /survey_results
  # GET /survey_results.json
  def index
    @survey_results = SurveyResult.all
  end

  # GET /survey_results/1
  # GET /survey_results/1.json
  def show
  end

  # GET /survey_results/new
  def new
    @survey_result = SurveyResult.new
  end

  # GET /survey_results/1/edit
  def edit
  end

  # POST /survey_results
  # POST /survey_results.json
  def create
    i = 0
    CSV.parse(params[:survey_result][:file].read) do |row|
      @result = SurveyResult.new
      email = row[14]
      @patient = Patient.where(:email => email).first
      if @patient != nil
        existing = SurveyResult.where(:patient_id => @patient.id).first
        if existing != nil
          existing.delete
        end
        
        @result.patient_id = @patient.id
        @result.practice_id = @patient.practice_id
        logger.debug("PT: " + @patient.id.to_s  )
        @result.status = row[0]
        @result.fid = row[1].to_i
        #@result.created = 
        @result.ip = row[5]
        @result.location = row[6]
        @result.nps = row[11].to_i
        run = Run.where(:name => row[17]).first
        if (run == nil)
          logger.debug("OH SNAP. NO RUN FOR THIS. BAILING")
          break;
        end
        #@result.run = run.name
        @result.run_id = run.id
        @result.collector = row[20]
        @result.a1 = row[22] == "1" ? true : false
        @result.a2 = row[23] == "1" ? true : false
        @result.a3 = row[24] == "1" ? true : false
        @result.a4 = row[25] == "1" ? true : false
        @result.a5 = row[26] == "1" ? true : false
        @result.a6comment = row[28]
        @result.posfeedback = row[29]
        @result.b1 = row[30] == "1" ? true : false
        @result.b2 = row[31] == "1" ? true : false
        @result.b3 = row[32] == "1" ? true : false
        @result.b4 = row[33] == "1" ? true : false
        @result.b5 = row[34] == "1" ? true : false
        @result.b6comment = row[36]
        @result.contact = row[37] == "1" ? true : false
        @result.negfeedback = row[38]
        @result.duration = row[12]
        @result.save
      end
      i = i + 1
    end
    
    respond_to do |format|
      format.html { redirect_to @result, notice: 'Survey result was successfully created.' }
      format.json { render action: 'show', status: :created, location: @survey_result }
    end
  end

  # PATCH/PUT /survey_results/1
  # PATCH/PUT /survey_results/1.json
  def update
    respond_to do |format|
      if @survey_result.update(survey_result_params)
        format.html { redirect_to @survey_result, notice: 'Survey result was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: 'edit' }
        format.json { render json: @survey_result.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /survey_results/1
  # DELETE /survey_results/1.json
  def destroy
    @survey_result.destroy
    respond_to do |format|
      format.html { redirect_to survey_results_url }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_survey_result
      @survey_result = SurveyResult.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def survey_result_params
      params.require(:survey_result).permit(:patient_id, :status, :fid, :created, :ip, :location, :nps, :run, :collector, :a1, :a2, :a3, :a4, :a5, :a6comment, :posfeedback, :b1, :b2, :b3, :b4, :b5, :b6comment, :contact, :negfeedback)
    end
end
